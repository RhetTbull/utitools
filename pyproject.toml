[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "utitools"
authors = [{name = "Rhet Turnbull", email = "rturnbull+git@gmail.com"}]
readme = "README.md"
license = { file = "LICENSE" }
dynamic = ["version", "description"]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Objective C",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pyobjc-core>=9.0,<10.0; sys_platform == 'darwin' and platform_release < '22.0'",
    "pyobjc-core>=9.0,<11.0; sys_platform == 'darwin' and platform_release >= '22.0'",
    "pyobjc-framework-CoreServices>=9.0,<10.0; sys_platform == 'darwin' and platform_release < '22.0'",
    "pyobjc-framework-CoreServices>=9.0,<11.0; sys_platform == 'darwin' and platform_release >= '22.0'",
    # UniformTypeIdentifiers is only available on BigSur (11.0) and later which is platform_release >= '20.0'
    "pyobjc-framework-UniformTypeIdentifiers>=9.0,<10.0; sys_platform == 'darwin' and platform_release >= '20.0'",
    "pyobjc-framework-UniformTypeIdentifiers>=9.0,<11.0; sys_platform == 'darwin' and platform_release >= '22.0'",
]

[project.optional-dependencies]
dev = ["bump-my-version"]
docs = [
    "mkdocs>=1.4.2",
    "mkdocs-material>=9.0.13",
    "mkdocstrings-python>=0.8.3",
]
test = ["pytest>=7.4.2", "pytest-cov"]

[project.urls]
Home = "https://github.com/RhetTbull/utitools"
Issues = "https://github.com/RhetTbull/utitools/issues"
Source = "https://github.com/RhetTbull/utitools"

[tool.flit.sdist]
exclude = ["site/**/*"]
[tool.bumpversion]
current_version = "0.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "src/utitools/__init__.py"
